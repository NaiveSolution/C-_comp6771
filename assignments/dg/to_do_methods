//bool InsertNode(const N& val) -- COMPLETED / TESTED

//bool InsertEdge(const N& src, const N& dst, const E& w) -- COMPLETED / TESTED

//bool DeleteNode(const N&) -- COMPLETED / TESTED

//bool Replace(const N& oldData, const N& newData) -- COMPLETED / TESTED

//void MergeReplace(const N& oldData, const N& newData) -- COMPLETED / TESTED

// void Clear() - COMPLETED / TESTED // Without access to nodes_ or edges_ this is difficult

//bool IsNode(const N& val); -- COMPLETED / TESTED

//bool IsConnected(const N& src, const N& dst); -- COMPLETED / TESTED

//std::vector<N> GetNodes() -- COMPLETED / TESTED

//std::vector<N> GetConnected(const N& src) -- COMPLETED / TESTED

//std::vector<E> GetWeights(const N& src, const N& dst) -- COMPLETED / TESTED

//const_iterator find(const N&, const N&, const E&); -- COMPLETED / TESTED

//bool erase(const N& src, const N& dst, const E& w) -- COMPELTED / TESTED

//const_iterator erase(const_iterator it); -- COMPLETED / TESTED

//const_iterator cbegin(); -- COMPLETED / TESTED

//const_iterator cend(); -- COMPLETED / TESTED

//const_reverse_iterator crbegin(); -- COMPLETED / TESTED

//const_reverse_iterator crend(); -- COMPLETED / TESTED

//const_iterator begin(); -- COMPLETED / TESTED

//const_iterator end(); -- COMPLETED / TESTED

//const_reverse_iterator rbegin(); -- COMPLETED / TESTED

//const_reverse_iterator rend(); -- COMPLETED / TESTED

/************** FRIENDS ******************/

//bool operator==(const gdwg::Graph<N, E>&, const gdwg::Graph<N, E>&) -- COMPLETED / TESTED

//bool operator!=(const gdwg::Graph<N, E>&, const gdwg::Graph<N, E>&) -- COMPLETED / TESTED

std::ostream& operator<<(std::ostream&, const gdwg::Graph<N, E>&) -- TODO